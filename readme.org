#+TITLE: Bagel
#+AUTHOR: Adam Schwartz
#+DATE: June 12, 2016
#+OPTIONS: ':true *:true toc:nil num:nil

* Description
Bagel is a /naive/ static website generator.

Using a tempting system that pairs with your available command line
tools, bagel helps you build websites without getting in the way.

Everything is constructed completely inside your HTML templates, no
frameworks, libraries, or special syntax. Shell commands within the
template are evaluated and rendered into a static file.

Using [[https://github.com/lepture/python-livereload][python-livereload]] is not required, but it makes development even
faster and nearly seamless. There is a basic [[example/server.py][server.py]] in the example
project directory.

* Install
#+BEGIN_SRC bash
$ pip install bagel
#+END_SRC

Or clone this repository and run:
#+BEGIN_SRC bash
python setup.py install
#+END_SRC

* Usage
#+BEGIN_SRC text
$ bagel --help
usage: bagel [-h] [-t FILE_TYPE] [source] [target]

Evaluate template code and render file(s)

positional arguments:
  source                input path
  target                output path

optional arguments:
  -h, --help            show this help message and exit
  -t FILE_TYPE, --file-type FILE_TYPE
                        file extension for templates (ex: html)
#+END_SRC

** Examples
Read from =stdin= and write to file:
#+BEGIN_SRC bash
$ cat app/template.html | bagel > bulid/index.html
#+END_SRC

Pass in =source= and =target= files as arguments:
#+BEGIN_SRC bash
$ bagel app/template.html build/index.html
#+END_SRC

Or render all =html= files in a directory:
#+BEGIN_SRC bash
$ bagel --file-type html app/templates/ bulid/
#+END_SRC

* Screenshots
[[file:screenshots/template.png]]
[[file:screenshots/index.png]]

